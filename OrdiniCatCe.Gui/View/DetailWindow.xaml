<Window x:Class="OrdiniCatCe.Gui.View.DetailWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:OrdiniCatCe.Gui.Converters"
        xmlns:model="clr-namespace:OrdiniCatCe.Gui.Model"
        DataContext="{Binding DetailViewModel, Source={StaticResource Locator}}"
        Title="Dettaglio Ordine" Style="{StaticResource wndStyle}"  WindowStartupLocation="CenterScreen"
        MinHeight="650" MinWidth="800" WindowState="Maximized"
        >
    <Window.Resources>
        <converters:MarcaConverter x:Key="marcaConverter" />
        <converters:FornitoreConverter x:Key="fornitoreConverter" />
        <converters:BoolToVisibilityConverterInverted x:Key="boolToVisibilityConverterInverted" />
        <converters:YesNoConverter x:Key="yesNoConverter" />
        <converters:MancanteConverter x:Key="mancanteConverter" />
        <converters:DatetimeIfExistsConverter x:Key="datetimeIfExistsConverter"></converters:DatetimeIfExistsConverter>
        <converters:RowBackgroundConverter x:Key="backgroundConverter" />
        <converters:RowForegroundConverter x:Key="foregroundConverter" />

        <DataTemplate x:Key="orderedItemTemplate" >
            <Border ToolTipService.ShowDuration="15000" Height="Auto" BorderBrush="LightSlateGray" BorderThickness="1" CornerRadius="2" HorizontalAlignment="Stretch">
                <Border.ToolTip>
                    <ToolTip >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" Text="{Binding Codice}"></TextBlock>
                            <TextBlock Grid.Row="0" Grid.Column="1" FontWeight="Bold" Text="{Binding Description}"></TextBlock>

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Marche}"></TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Fornitori}"></TextBlock>

                            <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding PrezzoAcquisto}"></TextBlock>
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding PrezzoVendita}"></TextBlock>

                            <TextBlock Grid.Row="3" Grid.Column="0" Text="{Binding Ordinato, StringFormat=Ordinato : {0}, Converter={StaticResource yesNoConverter}}" />
                            <TextBlock Grid.Row="4" Grid.Column="0" Text="{Binding Arrivato, StringFormat=Arrivato : {0}, Converter={StaticResource yesNoConverter}}" />
                            <TextBlock Grid.Row="5" Grid.Column="0" Text="{Binding Avvisato, StringFormat=Avvisato : {0}, Converter={StaticResource yesNoConverter}}" />
                            <TextBlock Grid.Row="6" Grid.Column="0" Text="{Binding Ritirato, StringFormat=Ritirato : {0}, Converter={StaticResource yesNoConverter}}" />

                            <TextBlock Grid.Row="3" Grid.Column="1" >
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource datetimeIfExistsConverter}">
                                        <Binding Path="Ordinato"></Binding>
                                        <Binding Path="DataOrdinato"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <TextBlock Grid.Row="4" Grid.Column="1" >
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource datetimeIfExistsConverter}">
                                        <Binding Path="Arrivato"></Binding>
                                        <Binding Path="DataArrivato"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <TextBlock Grid.Row="5" Grid.Column="1" >
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource datetimeIfExistsConverter}">
                                        <Binding Path="Avvisato"></Binding>
                                        <Binding Path="DataAvvisato"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <TextBlock Grid.Row="6" Grid.Column="1" >
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource datetimeIfExistsConverter}">
                                        <Binding Path="Ritirato"></Binding>
                                        <Binding Path="DataRitirato"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <TextBlock Grid.Row="7" Grid.Column="0" Text="{Binding Sprovvisto, StringFormat=Sprovvisto : {0}, Converter={StaticResource yesNoConverter}}" />
                            <TextBlock Grid.Row="7" Grid.Column="1" Text="{Binding FuoriStock, StringFormat=FuoriStock : {0}, Converter={StaticResource yesNoConverter}}" />
                        </Grid>
                    </ToolTip>
                </Border.ToolTip>

                <Grid Background="{Binding ., Converter={StaticResource backgroundConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Codice}" Foreground="{Binding ., Converter={StaticResource foregroundConverter}}"/>
                    <TextBlock Grid.Column="1" Text="{Binding Description}" Foreground="{Binding ., Converter={StaticResource foregroundConverter}}"/>
                    <TextBlock Grid.Column="2" Text="{Binding Fornitori.Name}" Foreground="{Binding ., Converter={StaticResource foregroundConverter}}"/>
                    <Button Grid.Column="3" Content="Modifica" Command="{Binding RelativeSource=
                        {RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path= DataContext.UpdatePezzoCommand}" CommandParameter="{Binding}"></Button>
                </Grid>
            </Border>
        </DataTemplate>

        <Style TargetType="FrameworkElement" x:Key="baseStyle">
            <Setter Property="Margin" Value="{StaticResource myMargin}" />
        </Style>

        <Style TargetType="TextBlock" BasedOn="{StaticResource baseStyle}">
            <Setter Property="FontSize" Value="{StaticResource myFontSize2}" />
        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource baseStyle}">
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{StaticResource myFontSize}" />
        </Style>
        <Style TargetType="Border" BasedOn="{StaticResource baseStyle}">
            <Setter Property="BorderBrush" Value="Chartreuse" />
            <Setter Property="CornerRadius" Value="5"></Setter>
            <Setter Property="Margin" Value="4"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource baseStyle}">
            <Setter Property="Margin" Value="6"></Setter>
            <Setter Property="Background" Value="WhiteSmoke"></Setter>
        </Style>

        <Style TargetType="DatePicker" BasedOn="{StaticResource baseStyle}">
            <Setter Property="FontSize" Value="{StaticResource myFontSize}" />
        </Style>

        <Style TargetType="ComboBox" BasedOn="{StaticResource baseStyle}">
            <Setter Property="FontSize" Value="{StaticResource myFontSize}" />
        </Style>

        <Style TargetType="GroupBox" BasedOn="{StaticResource baseStyle}">
            <Setter Property="Margin" Value="2" />
            <Setter Property="FontSize" Value="{StaticResource myFontSize}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="{StaticResource groupBoxBorderBrush}" />
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource baseStyle}">
            <Setter Property="FontSize" Value="{StaticResource myFontSize}" />
        </Style>
        <Style TargetType="ListBox" BasedOn="{StaticResource baseStyle}">
            <Setter Property="FontSize" Value="{StaticResource myFontSize}" />
        </Style>
    </Window.Resources>
    <StackPanel>
        <StackPanel.Resources>
            <converters:TextboxBackgroundConverter x:Key="textboxBackgroundConverter"></converters:TextboxBackgroundConverter>
            <converters:EnumBooleanConverter x:Key="enumBooleanConverter" ></converters:EnumBooleanConverter>

            <ControlTemplate x:Key="validationErrorTemplate">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                        <TextBlock Foreground="Red"  Text="!" />
                        <TextBlock Foreground="Red" FontWeight="12" Margin="2,0,0,0" 
                       Text="{Binding ElementName=ErrorAdorner, 
                       Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                       ></TextBlock>
                    </StackPanel>
                    <AdornedElementPlaceholder x:Name="ErrorAdorner" />
                </StackPanel>
            </ControlTemplate>
        </StackPanel.Resources>
        <GroupBox x:Name="grpCliente" Header="Anagrafica" FontSize="16" FontWeight="Bold">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <!-- Riga 1: NOME COGNOME -->
                <TextBlock Foreground="{Binding Cognome, Converter={StaticResource textboxBackgroundConverter}}" Text="Cognome *" Grid.Column="0" Grid.Row="0" />
                <TextBox Text="{Binding Cognome, UpdateSourceTrigger=PropertyChanged, FallbackValue=Rota}" Grid.Column="1" Grid.Row="0" />

                <TextBlock Foreground="{Binding Nome, Converter={StaticResource textboxBackgroundConverter}}" Grid.Row="0" Grid.Column="2" Text="Nome *" />
                <TextBox  Text="{Binding Nome, UpdateSourceTrigger=PropertyChanged, FallbackValue=Andrea}" Grid.Column="3" Grid.Row="0" />

                <!-- Riga 2: indirizzo -->
                <TextBlock Text="Indirizzo" Grid.Row="1" Grid.Column="0"></TextBlock>
                <TextBox Text="{Binding Indirizzo, UpdateSourceTrigger=PropertyChanged, FallbackValue=Via Balassi 44}" Grid.Row="1" Grid.Column="1" />

                <TextBlock Text="Località" Grid.Row="1" Grid.Column="2"></TextBlock>
                <TextBox Text="{Binding Localita, UpdateSourceTrigger=PropertyChanged, FallbackValue=Galbiate}" Grid.Row="1" Grid.Column="3" />

                <TextBlock Text="Civico" Grid.Row="1" Grid.Column="4"></TextBlock>
                <TextBox Text="{Binding NumeroCivico, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="5" />


                <!-- Riga 3: contatti -->
                <TextBlock Text="Telefono +" Grid.Row="2" Grid.Column="0"></TextBlock>
                <TextBox Text="{Binding Telefono, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="1" />

                <TextBlock Text="EMail +" Grid.Row="2" Grid.Column="2"></TextBlock>
                <TextBox Text="{Binding EMail, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="3" />

                <TextBlock Text="Cellulare +" Grid.Row="2" Grid.Column="4" ></TextBlock>
                <TextBox Text="{Binding Cellulare, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="5" />
            </Grid>
        </GroupBox>
        <!-- Contiene la Listbox con tutti i pezzi ordinati -->
        <GroupBox x:Name="brdPezzi" Header="Pezzi">
            <StackPanel Orientation="Vertical">
                <ListBox Height="140" x:Name="lbOrderedItems" ItemsSource="{Binding Pezzi}" HorizontalContentAlignment="Stretch" ItemTemplate="{StaticResource orderedItemTemplate}" />
                <Button Content="Aggiungi Pezzo" Command="{Binding AddPezzoCommand}" Style="{StaticResource 150ButtonsStyle}"/>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="brdPezzo" Header="Generiche">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock FontWeight="Bold" Text="Data Richiesta" Grid.Column="0"></TextBlock>
                <DatePicker SelectedDate="{Binding DataRichiesta}" Grid.Column="1" />
                <CheckBox IsChecked="{Binding RicevutoCaparra, Mode=TwoWay}" Margin="6,3,3,3" VerticalAlignment="Center" VerticalContentAlignment="Center" Content="Cauzione" Grid.Column="2"></CheckBox>
                <TextBox Text="{Binding Caparra}" Grid.Column="3" ></TextBox>
                <DatePicker SelectedDate="{Binding DataCaparra}" Grid.Column="4" />
                
            </Grid>
        </GroupBox>
        <GroupBox x:Name="brdOrdine" Header="Modalità Avviso">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox Content="Telefono" IsChecked="{Binding AvvisatoTelefono}" />
                <CheckBox Grid.Column="1" Content="Cellulare" IsChecked="{Binding AvvisatoCellulare}"/>
                <CheckBox Grid.Column="2" Content="EMail" IsChecked="{Binding AvvisatoEMail}"/>
                <CheckBox Grid.Column="3" Content="Segreteria" IsChecked="{Binding AvvisatoSegreteria}"/>
            </Grid>
        </GroupBox>
        <GroupBox x:Name="brdButtons" Header="Operazioni" >
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource 75ButtonsStyle}" Content="Annulla" Command="{Binding AnnullaCommand}"/>
                <Button Style="{StaticResource 100ButtonsStyle}" Content="{Binding ConfermaButtonContent, FallbackValue=Modifica}" Command="{Binding ConfermaCommand}"/>
                <Button Visibility="{Binding IsNew, Converter={StaticResource boolToVisibilityConverterInverted}}" Style="{StaticResource 200ButtonsStyle}" Content="Manda in storico" Command="{Binding StoricizzaCommand}"/>
                <TextBlock Text="{Binding ErrorMessage}" FontWeight="Bold" FontSize="14" Foreground="#FFEE0E0E" ></TextBlock>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="brdHelp" Header="Info">
            <StackPanel Orientation="Horizontal">
                <Image Margin="4"  Width="24" Height="24" Source="../Images/information2.png"></Image>
                <StackPanel Orientation="Vertical">
                    <TextBlock TextWrapping="Wrap" Width="667" HorizontalAlignment="Center" Margin="5,0,5,0" FontWeight="Bold" >
                    I campi contrassegnati con * sono obbligatori. Se non vengono valorizzati non sarà
                    possibile confermare l'inserimento/modifica.
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Width="667" HorizontalAlignment="Center" Margin="1" FontWeight="Bold" >
                    Dei campi contrassegnati con + ne va inserito almeno uno.
                    </TextBlock>
                </StackPanel>
            </StackPanel>
        </GroupBox>
    </StackPanel>
</Window>
